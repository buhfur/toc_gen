#!/usr/bin/env python3 

# Script that generates a Table Of Contents with links to other markdown files in a specified directory 
import sys
import os
import argparse
from pathlib import Path



def tocgen(FILE,DIR, show_changes=True):


    PATH = Path(DIR)


    # Checks for absolute path
    if not os.path.isabs(PATH):
        print("ERROR: path provided is not Absolute path")
        exit(1)

    if not os.path.isfile(FILE):
        print("File provided is not valid ")


    count = 0 # ID for TOC entries 
    template_list = []

    for x in os.listdir(PATH):
        if x.endswith('.md') and x != os.path.basename(FILE):
            MD_PATH_TEMPLATE=f'{PATH.parts[-1]}/{x}'
            stripped_ext = x[:-3]
            final_str = stripped_ext[0].upper() + stripped_ext[1:]
            count+=1
            template = f'{count}. [{final_str}]({MD_PATH_TEMPLATE})'
            template_list.append(template)

    if not show_changes:
        with open(FILE, 'a') as f : 
            for x in template_list:
                f.write(''.join(x)+"\n")
            

    # if -s argument is used
    if show_changes:
        for x in template_list : print(x)


# arg parsing 

parser = argparse.ArgumentParser()

parser.add_argument("--show-changes","-s", help="Show table of contents before writing to file ", action="store_true")

parser.add_argument("--dir", "-d", help="Specify absolute directory as root for Table of Contents", required=True,type=str)
parser.add_argument("--file", "-f", help="relative or Absolute path of Markdown file the TOC will be written to", required=True,action='store')


args = parser.parse_args()

   
# use current working dir of file 
if not args.show_changes:
    tocgen(args.file, args.dir,show_changes=False)
else:
    tocgen(args.file, args.dir)

    

